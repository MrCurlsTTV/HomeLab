- name: Install NFS client
  ansible.builtin.package:
    name: "{{ 'nfs-common' if ansible_os_family == 'Debian' else 'nfs-utils' }}"
    state: present
  become: true

- name: Ensure all NFS mount points exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: '0755'
  loop: "{{ nfs_mounts_master if ansible_hostname in groups['k8s-master'] else nfs_mounts_worker }}"
  become: true

- name: Mount all NFS shares and persist them in fstab
  ansible.builtin.mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: nfs
    opts: defaults
    state: mounted
  loop: "{{ nfs_mounts_master if ansible_hostname in groups['k8s-master'] else nfs_mounts_worker }}"
  become: true

- name: Check PVCs for Rancher Monitoring
  kubernetes.core.k8s_facts:
    kind: PersistentVolumeClaim
    namespace: cattle-monitoring-system
  register: pvc_facts
  when: ansible_hostname == 'k8s-master-0'
  ignore_errors: true

- name: Create PVC for Rancher Monitoring
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: rancher-monitoring-pvc
        namespace: cattle-monitoring-system
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 100Gi
        storageClassName: monitoring-data-nfs
  when: ansible_hostname == 'k8s-master-0' and "'rancher-monitoring-pvc' not in pvc_facts.resources | map(attribute='metadata.name')"
  register: pvc_creation_rancher