#roles/rke2/tasks/main.yml
- name: Ensure RKE2 Directories exist
  file:
    path: /etc/rancher/rke2
    state: directory
    mode: '0755'

- name: Update apt cache (Ubuntu only)
  apt:
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Disable Firewall
  command: >
    sudo ufw disable
  register: disable_ufw

- name: Disable Swap
  command: >
    sudo swapoff -a
  register: disable_swap

- name: Comment out swap line in /etc/fstab
  become: true
  lineinfile:
    path: /etc/fstab
    regexp: '^([^#].*\s+swap\s+)'
    line: '# \1'
    backrefs: yes
  when: disable_swap is changed
  register: comment_swap_fstab

- name: Create RKE2 server config.yml for First Server node
  copy:
    dest: /etc/rancher/rke2/config.yml
    content: |
      tls-san:
        - kube.mrcurls.org
        - 172.16.10.200
        - kube-api.mrcurls.org
      node-taint:
        - "CriticalAddonsOnly=true:Noexecute"
    mode: '0755'
  when: ansible_hostname == 'k8s-master-0'

- name: Download RKE2 Install Script for Nodes
  get_url:
    url: https://get.rke2.io
    dest: /tmp/install.sh
    mode: '0755'
  register: download_script

- name: Set Parameter for Agents
  command: >
    sudo INSTALL_RKE2_TYPE="AGENT" sh /tmp/install.sh
  when: ansible_hostname.startswith('k8s-worker-')

- name: Set Parameter for Server
  command: >
    sudo INSTALL_RKE2_TYPE="SERVER" sh /tmp/install.sh
  when: ansible_hostname.startswith('k8s-master-')

- name: Install RKE2 on all nodes
  command: >
    /tmp/install.sh
  register: rke2_install
  ignore_errors: yes

- name: Enable & Start RKE2 service
  systemd:
    name: rke2-server.service
    enabled: true
    state: started
  when: ansible_hostname == 'k8s-master-0'

- name: Read RKE2 Token
  command: >
    cat /var/lib/rancher/rke2/server/node-token
  register: rke2_token
  when: ansible_hostname == 'k8s-master-0'

- name: Set RKE2 Token as a fact
  set_fact:
    shared_rke2_token: "{{ rke2_token.stdout }}"
  when: ansible_hostname == 'k8s-master-0'
  run_once: true

- name: Set RKE2 base config for Agent and Remaining Master nodes
  set_fact:
    rke2_config_content: |
      server: https://172.16.10.200:9345
      token: {{ hostvars['k8s-master-0'].shared_rke2_token }}

- name: Append master-specific settings if host is a secondary master
  set_fact:
    rke2_config_content: "{{ rke2_config_content }}\n      tls-san:\n        - kube.mrcurls.org\n        - 172.16.10.200\n        - kube-api.mrcurls.org\n      node-taint:\n        - 'CriticalAddonsOnly=true:Noexecute' "
  when: ansible_hostname.startswith('k8s-master-') and ansible_hostname != 'k8s-master-0'

- name: Create RKE2 config.yml for Agent and Remaining Master nodes
  copy:
    dest: /etc/rancher/rke2/config.yml
    mode: '0755'
    content: "{{ rke2_config_content }}"
  when: ansible_hostname != 'k8s-master-0' and (ansible_hostname.startswith('k8s-master-') or ansible_hostname.startswith('k8s-worker-'))

- name: Join nodes to the RKE2 master node
  command: >
    sudo rke2 {{ 'server' if ansible_hostname.startswith('k8s-master-') else 'agent' }}
    -s https://172.16.10.200:9345
    -t {{ hostvars['k8s-master-0'].shared_rke2_token }}
  when: ansible_hostname != 'k8s-master-0'
  register: rke2_join
  timeout: 60
  ignore_errors: yes


- name: Ensure RKE2 service is enabled on appropriate node type
  command: >
    sudo systemctl enable {{ 'rke2-server.service' if ansible_hostname.startswith('k8s-master-') else 'rke2-agent.service' }}
  when: ansible_hostname.startswith('k8s-master-') or ansible_hostname.startswith('k8s-worker-')
  register: rke2_service
  ignore_errors: yes

- name: Ensure RKE2 service is started on appropriate node type
  command: >
    sudo systemctl start {{ 'rke2-server.service' if ansible_hostname.startswith('k8s-master-') else 'rke2-agent.service' }}
  when: ansible_hostname.startswith('k8s-master-') or ansible_hostname.startswith('k8s-worker-')
  register: rke2_service
  ignore_errors: yes