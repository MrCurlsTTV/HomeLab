---
# First set up the basic HAProxy configuration without SSL

# Ensure HAProxy configuration directory exists
- name: Create HAProxy configuration directory
  file:
    path: /etc/haproxy
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - haproxy_config
    - ssl_config
    - config_update
    - always

- name: Create HAProxy configuration
  template:
    src: templates/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: '0644'
  notify: Restart HAProxy
  tags:
    - haproxy_config
    - basic_config
    - config_update

- name: Create HAProxy error pages directory
  file:
    path: /etc/haproxy/errors
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - haproxy_config
    - error_pages
    - config_update
    - always

- name: Copy HAProxy error pages
  template:
    src: "templates/{{ item }}.j2"
    dest: "/etc/haproxy/errors/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - 503.http
    - 504.http
  notify: Restart HAProxy
  tags:
    - haproxy_config
    - error_pages
    - config_update

# Note: Certificate renewal cron jobs removed - Cloudflare Origin certificates are valid for 15 years

- name: Configure sysctl for HAProxy
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_set: yes
  with_items:
    - { key: 'net.ipv4.ip_nonlocal_bind', value: '1' }
    - { key: 'net.ipv4.ip_forward', value: '1' }
    - { key: 'net.core.somaxconn', value: '65535' }

# Ensure certs directory exists 
- name: Create HAProxy certs directory
  file:
    path: /etc/haproxy/certs
    state: directory
    owner: root
    group: root
    mode: '0700'

# Note: HAProxy service start moved to end of cert.yml after all configuration is complete

# Check for certificate availability to set template variable
- name: Check if HAProxy certificate exists for template
  stat:
    path: "/etc/haproxy/certs/{{ domain_name }}.pem"
  register: haproxy_cert_stat

- name: Set certificate availability fact for template
  set_fact:
    ssl_cert_available: "{{ haproxy_cert_stat.stat.exists | default(false) }}"


# Ensure configuration has proper line endings
- name: Ensure HAProxy configuration has proper line endings
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    line: "# End of HAProxy configuration"
    insertafter: EOF
  notify: Restart HAProxy

# Add task to check HAProxy configuration
- name: Check HAProxy configuration for errors
  shell: haproxy -c -f /etc/haproxy/haproxy.cfg
  register: haproxy_check
  changed_when: false
  ignore_errors: true

- name: Display HAProxy configuration errors (if any)
  debug:
    var: haproxy_check.stderr_lines
  when: haproxy_check.rc != 0 