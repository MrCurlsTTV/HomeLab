trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  TF_VAR_pm_api_token_id: $(PROXMOX_API_TOKEN_ID)
  TF_VAR_pm_api_token_secret: $(PROXMOX_API_TOKEN_SECRET)
  ANSIBLE_HOST_KEY_CHECKING: "False"

stages:
- stage: Full_Rebuild
  displayName: 'Full Homelab Infrastructure Rebuild'
  jobs:
  - job: TeardownAndDeploy
    displayName: 'Destroy and Rebuild Infrastructure'
    steps:
    - checkout: self

    - task: InstallSSHKey@0
      displayName: 'Install Ansible SSH Key'
      inputs:
        knownHostsEntry: ''
        sshPublicKey: $(ANSIBLE_SSH_PUBLIC_KEY)
        sshKeySecureFile: 'ansible_ssh_private_key'

    - task: Bash@3
      displayName: 'Install Ansible'
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get update
          sudo apt-get install -y ansible

    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'

    - task: Bash@3
      displayName: 'Terraform Destroy'
      inputs:
        targetType: 'inline'
        workingDirectory: '$(Build.SourcesDirectory)/Terraform'
        script: 'terraform destroy -auto-approve'
      
    - task: Bash@3
      displayName: 'Ansible: Create VM Templates'
      inputs:
        targetType: 'inline'
        workingDirectory: '$(Build.SourcesDirectory)/Ansible/Template Creation'
        script: 'ansible-playbook -i inventory/hosts.ini cloud_init_templates.yml --private-key $(ansible_ssh_private_key.secureFilePath)'

    - task: Bash@3
      displayName: 'Terraform Apply (3 times)'
      inputs:
        targetType: 'inline'
        workingDirectory: '$(Build.SourcesDirectory)/Terraform'
        script: |
          terraform apply -auto-approve
          terraform apply -auto-approve
          terraform apply -auto-approve

    - task: Bash@3
      displayName: 'Wait for VMs to Boot'
      inputs:
        targetType: 'inline'
        script: |
          echo "Waiting for VMs to boot..."
          sleep 120

    - task: Bash@3
      displayName: 'Ansible: Configure HAProxy'
      inputs:
        targetType: 'inline'
        workingDirectory: '$(Build.SourcesDirectory)/Ansible/haproxy'
        script: 'ansible-playbook -i inventory/hosts.ini site.yml --private-key $(ansible_ssh_private_key.secureFilePath)'
    
    - task: Bash@3
      displayName: 'Ansible: Deploy Kubernetes'
      inputs:
        targetType: 'inline'
        workingDirectory: '$(Build.SourcesDirectory)/Ansible/Kubernetes'
        script: 'ansible-playbook -i inventory/hosts.ini site.yml --private-key $(ansible_ssh_private_key.secureFilePath)' 