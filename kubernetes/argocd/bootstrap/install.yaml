# ArgoCD installation with custom configuration for GitOps
# This file should be applied AFTER the standard ArgoCD manifests
# 
# Installation steps:
# 1. kubectl create namespace argocd
# 2. kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
# 3. kubectl apply -f this-file.yaml
# 4. kubectl rollout restart deployment/argocd-server -n argocd

apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  url: https://argocd.mrcurls.org
  application.instanceLabelKey: argocd.argoproj.io/instance
  admin.enabled: "true"
  server.grpc.web: "true"
  accounts.admin: apiKey, login
  accounts.admin.enabled: "true"
  repositories: |
    - type: git
      url: https://github.com/MrCurlsTTV/homelab.git
  dex.config: |
    connectors: []
    logger:
      level: debug
      format: json
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
data:
  server.insecure: "true"
  server.disable.auth: "false"
  dexserver.disable.tls: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-rbac-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
data:
  policy.default: role:readonly
  policy.csv: |
    p, role:admin, applications, *, */*, allow
    p, role:admin, certificates, *, *, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    g, argocd-admins, role:admin