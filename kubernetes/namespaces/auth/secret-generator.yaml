apiVersion: batch/v1
kind: Job
metadata:
  name: authentik-secret-generator
  namespace: auth
  annotations:
    sidecar.istio.io/inject: "false"  # Disable Istio sidecar injection
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"  # Disable Istio sidecar injection
    spec:
      serviceAccountName: authentik-secret-generator
      containers:
      - name: secret-generator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          # Check if secret already exists
          if kubectl get secret authentik-secret -n auth &> /dev/null; then
            echo "Secret authentik-secret already exists, skipping creation"
            exit 0
          fi

          # Generate a secure 50-character secret key
          SECRET_KEY=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-50)

          # Create the secret using kubectl directly
          if kubectl create secret generic authentik-secret \
            --namespace=auth \
            --from-literal=secret_key="$SECRET_KEY" \
            --from-literal=db_user="postgres" \
            --from-literal=db_password="your-strong-postgres-password" \
            --validate=false; then
            echo "Authentik secret key generated successfully"
            echo "Secret key: $SECRET_KEY"
          else
            echo "Failed to create secret"
            exit 1
          fi
      restartPolicy: OnFailure