apiVersion: batch/v1
kind: Job
metadata:
  name: redis-secret-generator
  namespace: database
  annotations:
    sidecar.istio.io/inject: "false"  # Disable Istio sidecar injection
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"  # Disable Istio sidecar injection
    spec:
      serviceAccountName: database-secret-generator
      containers:
      - name: secret-generator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          # Check if secret already exists
          if kubectl get secret redis-secret -n database &> /dev/null; then
            echo "Secret redis-secret already exists, skipping creation"
            exit 0
          fi

          # Generate a secure password
          REDIS_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-32)

          # Create the secret
          if kubectl create secret generic redis-secret \
            --namespace=database \
            --from-literal=password="$REDIS_PASSWORD" \
            --validate=false; then
            echo "Redis secret generated successfully"
            echo "Password: $REDIS_PASSWORD"
          else
            echo "Failed to create secret"
            exit 1
          fi
      restartPolicy: OnFailure
