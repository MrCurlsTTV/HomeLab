---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-alloy-config
  namespace: monitoring
data:
  alloy.yaml: |
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
                  api_server: https://kubernetes.default.svc.cluster.local
                  tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: true
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              scheme: http
              tls_config:
                insecure_skip_verify: true
              relabel_configs:
                # Only scrape pods with prometheus.io/scrape=true annotation
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                # Use the pod IP for scraping
                - source_labels: [__meta_kubernetes_pod_ip]
                  action: replace
                  target_label: __address__
                  regex: (.*)
                  replacement: $1:15020
                # Set metrics path to the Istio sidecar proxy metrics endpoint
                - source_labels: [__meta_kubernetes_pod_container_port_name]
                  action: keep
                  regex: .*-metrics
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                # Add standard Kubernetes labels
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: pod
                # Add service-level labels
                - source_labels: [__meta_kubernetes_service_name]
                  action: replace
                  target_label: service
                - source_labels: [__meta_kubernetes_service_label_app]
                  action: replace
                  target_label: app
              metric_relabel_configs:
                # Drop noisy metrics
                - source_labels: [__name__]
                  regex: 'go_.*|process_.*'
                  action: drop
                # Keep only relevant istio metrics
                - source_labels: [__name__]
                  regex: 'istio_.*'
                  action: keep

      filelog:
        include:
          - /var/log/pods/*/*/*.log
        start_at: end
        include_file_name: true
        operators:
          - type: regex_parser
            regex: '^(?P<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z) (?P<stream>stdout|stderr) [A-Z] (?P<message>.*)$'
            parse_time:
              layout: '%Y-%m-%dT%H:%M:%S.%LZ'
              parse_from: time

    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_mib: 1024
        spike_limit_mib: 256
      resource:
        attributes:
          - key: cluster.name
            value: homelab
            action: upsert
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.container.name
            - k8s.node.name
          annotations:
            - key: prometheus.io/scrape
              from: pod
            - key: prometheus.io/port
              from: pod
          labels:
            - key: app
              from: pod

    exporters:
      prometheus:
        endpoint: "0.0.0.0:9090"
      file:
        path: /dev/stdout
      splunk_hec:
        endpoint: "http://loki:3100/loki/api/v1/push"
        token: "ignored"
        source: "alloy"
        sourcetype: "kubernetes"
        index: "logs"
        sending_queue:
          enabled: true
          num_consumers: 4
          queue_size: 1000
        retry_on_failure:
          enabled: true
          initial_interval: 1s
          max_interval: 30s
          max_elapsed_time: 5m

    service:
      telemetry:
        logs:
          level: info
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [prometheus]
        logs:
          receivers: [filelog]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [splunk_hec, file]

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-alloy
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana-alloy
  template:
    metadata:
      labels:
        app: grafana-alloy
    spec:
      serviceAccount: grafana-alloy
      containers:
        - name: alloy
          image: otel/opentelemetry-collector-contrib:0.135.0
          args:
            - --config=/etc/alloy/alloy.yaml
          env:
            - name: KUBERNETES_SERVICE_HOST
              value: "kubernetes.default.svc"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 9090
              name: http-metrics
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
            - name: pods
              mountPath: /var/log/pods
              readOnly: true
            - name: docker
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: kube-api-access
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
          resources:
            limits:
              cpu: 1000m
              memory: 1536Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: true
            runAsUser: 0
      volumes:
        - name: config
          configMap:
            name: grafana-alloy-config
        - name: pods
          hostPath:
            path: /var/log/pods
            type: DirectoryOrCreate
        - name: docker
          hostPath:
            path: /var/lib/docker/containers
            type: DirectoryOrCreate
        - name: kube-api-access
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-alloy
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-alloy
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - namespaces
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources:
      - replicasets
      - deployments
      - statefulsets
      - daemonsets
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-alloy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-alloy
subjects:
  - kind: ServiceAccount
    name: grafana-alloy
    namespace: monitoring

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-alloy
  namespace: monitoring
spec:
  selector:
    app: grafana-alloy
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090