---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-alloy-config
  namespace: monitoring
data:
  alloy.yaml: |
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: kubernetes_namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: kubernetes_pod_name

      filelog:
        include: [ /var/log/pods/*/*/*.log ]
        exclude: []
        start_at: beginning
        include_file_path: true
        include_file_name: false
        operators:
          - type: json_parser
            parse_to: attributes
          - type: time_parser
            parse_from: attributes.time
            layout: '%Y-%m-%dT%H:%M:%S.%LZ'

    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_mib: 1024
        spike_limit_mib: 128
      resource:
        attributes:
          - key: cluster.name
            value: homelab
            action: upsert
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.container.name
            - k8s.node.name
          annotations:
            - key: prometheus.io/scrape
              from: pod
            - key: prometheus.io/port
              from: pod
          labels:
            - key: app
              from: pod

    exporters:
      prometheus:
        endpoint: "0.0.0.0:9090"
      loki:
        endpoint: "http://loki:3100/loki/api/v1/push"
        tenant_id: "fake"
        labels:
          attributes:
            container: "k8s.container.name"
            namespace: "k8s.namespace.name"
            pod: "k8s.pod.name"
            node: "k8s.node.name"

    service:
      telemetry:
        logs:
          level: info
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [prometheus]
        logs:
          receivers: [filelog]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [loki]

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-alloy
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana-alloy
  template:
    metadata:
      labels:
        app: grafana-alloy
    spec:
      serviceAccount: grafana-alloy
      containers:
        - name: alloy
          image: grafana/alloy:v0.1.0
          args:
            - --config=/etc/alloy/alloy.yaml
          ports:
            - containerPort: 9090
              name: http-metrics
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
            - name: pods
              mountPath: /var/log/pods
              readOnly: true
            - name: docker
              mountPath: /var/lib/docker/containers
              readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            privileged: true
            runAsUser: 0
      volumes:
        - name: config
          configMap:
            name: grafana-alloy-config
        - name: pods
          hostPath:
            path: /var/log/pods
            type: DirectoryOrCreate
        - name: docker
          hostPath:
            path: /var/lib/docker/containers
            type: DirectoryOrCreate

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-alloy
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-alloy
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-alloy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-alloy
subjects:
  - kind: ServiceAccount
    name: grafana-alloy
    namespace: monitoring

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-alloy
  namespace: monitoring
spec:
  selector:
    app: grafana-alloy
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
