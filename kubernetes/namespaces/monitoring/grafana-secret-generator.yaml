apiVersion: batch/v1
kind: Job
metadata:
  name: grafana-admin-secret-generator
  namespace: monitoring
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: secret-generator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Generate a secure admin password
          ADMIN_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-32)
          
          # Create the admin secret
          kubectl create secret generic grafana-secret \
            --namespace=monitoring \
            --from-literal=admin_password="$ADMIN_PASSWORD" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          echo "Grafana admin secret generated successfully"
          echo "Admin password: $ADMIN_PASSWORD"
        volumeMounts:
        - name: kubectl-config
          mountPath: /root/.kube
          readOnly: true
      volumes:
      - name: kubectl-config
        projected:
          sources:
          - serviceAccount:
              name: grafana-secret-generator
      serviceAccountName: grafana-secret-generator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-secret-generator
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana-secret-generator
  namespace: monitoring
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "update", "patch", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-secret-generator
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: grafana-secret-generator
  namespace: monitoring
roleRef:
  kind: Role
  name: grafana-secret-generator
  apiGroup: rbac.authorization.k8s.io